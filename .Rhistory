library(car)
vif(model2)
# Neues Modell
model2 = lm(Weight ~ Height + Age, data=body)
body = read.csv('C:\\Users\\Dominik\\Downloads\\body-dimensions.csv')
# Überblick über Daten
summary(body)
# Histogramme
hist(body$Age)
hist(body$Weight)
# Scatterplot
plot(body$Height, body$Weight)
# Regression
model = lm(Weight ~ Height, data=body)
summary(model)
# Daten einlesen
body = read.csv('C:\\Users\\Dominik\\Downloads\\body-dimensions.csv')
body = read.csv('C:\\Users\\Dominik\\Downloads\\body-dimensions.csv')
show(body)
mean(body$Height)
mean(body$Weight)
sd(body$Height)
sd(body$Weight)
colnames(body)
table(body$gender == 'Male')
table(body$gender)
table(body$Height)
plot(body$Weight, body$Height)
plot(body$Height, body$Weight)
hist(body$Height)
hist(body$Weight)
model = lm(body$Height, body$Weight)
model = lm(Height, Weight, data = body)
model = lm(Height ~ Weight, data = body)
summary(model)
3.8782+4.6532
8.5314*2
confint(model)
koeff = coef(model)
plot(body$Height, body$Weight)
abline(koeff[1], koeff[2], col="blue")
koeff = coef(model)
plot(body$Height, body$Weight)
abline(koeff[1], koeff[2], col="blue")
abline(koeff[1], koeff[2], col="green")
koeff
abline(koeff[1], koeff[2])
model = lm(Weight ~ Height, data = body)
summary(model)
confint(model)
koeff = coef(model)
plot(body$Height, body$Weight)
abline(koeff[1], koeff[2])
abline(koeff[1], koeff[2], col="blue")
predict(model, newdata = data.frame(Height = 150), type = 'response')
# 150cm sollte 47,6kg wiegen
predict(model, newdata = data.frame(Height = 170), type = 'response')
# 170cm sollte 67,9kg wiegen
predict(model, newdata = data.frame(Height = 190), type = 'response')
# NEUES MODELL
model1 = lm(Weight ~ Height + Gender, data = body)
summary(model1)
confint(model1)
koeff = coef(model1)
koeff1 = coef(model1)
koeff = coef(model)
abline(koeff1[1], koeff1[2], col="green")
# MODELLTESTS
cor[, c('Height', 'Weight', 'Navel.grith')]
# MODELLTESTS
cor(, c['Height', 'Weight', 'Navel.grith'])
# MODELLTESTS
cor(body[, c('Height', 'Weight', 'Navel.grith')])
# MODELLTESTS
cor(body[, c('Height', 'Weight', 'Navel.girth')])
library(car)
vif(model)
vif(model1)
# MODELLTESTS
cor(body[, c('Height', 'Weight', 'Gender' ,'Navel.girth')])
# MODELLTESTS
cor(body[, c('Height', 'Weight' ,'Navel.girth')])
plot(Weight, resid(model1))
plot(body$Weight, resid(model1))
cor(resid(model1)[1:506], resid(model1)[2:507])
durbinWatsonTest(model1, max.lag = 3)
qqp(resid(model1))
skew(data.frame(body[,1:5]), na.rm = TRUE)
kurtosi(data.frame(body[,1:5]), na.rm = TRUE)
rstandard(model1)
resid(model1)
res1 = resid(model1)
res2= rstandard(model1)
plot(res1, Hight, data = body)
plot(res1, body$Hight)
plot(res2, body$Hight)
plot(res1, body$Hight)
plot(res2, body$Hight)
crPlots(model1)
plot(model1, which=4)
plot(model1, which=5)
outlierTest(model1)
# Ãbung AKIT2
# Arno Hollosi
#
library(dplyr)
# Daten laden
# Idee fÃ¼r Datenset von: DOI: 10.1186/1742-7622-5-2
# http://ete-online.biomedcentral.com/articles/10.1186/1742-7622-5-2
blutdruck <- read.csv("C:\\Users\\Dominik\\Downloads\\blutdruck.csv")
summary(blutdruck)
# Plot kann auch mit Formel angegeben werden
plot(blood.pressure ~ current.weight, data=blutdruck)
# In dieser Uebung wollen wir sehen, wie sich Koeffizienten einer Regressionsgleichung
# mit der Stichprobe Aendern koennen.
#
# Zu diesem Zweck nehmen wir an, dass das Datenset die *Gesamtpopulation* darstellt.
# Die Koeffizienten ueber das gesamte Datenset stellen also die "echten/richtigen"
# Werte fuer die Gesamtpopulation dar:
population.modell = lm(blood.pressure ~ current.weight, data=blutdruck)
# (1) Sehen Sie sich das Ergebnis des Modells an und interpretieren Sie es.
summary(population.modell)
# (2) Welche Werte fuer die Koeffizienten erhalten Sie?
koeff = coef(model)
# (2) Welche Werte fuer die Koeffizienten erhalten Sie?
koeff = coef(modell)
modell = lm(blood.pressure ~ current.weight, data=stichprobe)
# Nehmen wir nun an, wir machen eine Forschungsstudie mit einer Stichprobe
# von z.B. 50 Personen
# die Funktion sample_n() aus der dplyr-Bibliothek wÃ¤hlt zufÃ¤llig Zeilen (DatensÃ¤tze)
# aus der Population aus:
stichprobe = sample_n(blutdruck, 50)
modell = lm(blood.pressure ~ current.weight, data=stichprobe)
# (2) Welche Werte fuer die Koeffizienten erhalten Sie?
koeff = coef(modell)
koeff
# (3) Enthaelt das Konfidenz-Intervall der Stichprobe die Werte der Gesamtpopulation?
summary(modell)
